--- r/table_elim.result	2012-02-23 15:57:49.000000000 +0100
+++ /usr/home/serg/Abk/mysql/5.5-mtr/storage/pbxt/mysql-test/main/r/table_elim.reject	2012-02-23 23:15:49.000000000 +0100
@@ -130,7 +130,7 @@
 This should use facts and a1 tables:
 explain extended select id from v1 where attr1 between 12 and 14;
 id	select_type	table	type	possible_keys	key	key_len	ref	rows	filtered	Extra
-1	SIMPLE	a1	range	PRIMARY,attr1	attr1	5	NULL	2	100.00	Using index condition
+1	SIMPLE	a1	range	PRIMARY,attr1	attr1	5	NULL	1	100.00	Using where
 1	SIMPLE	f	eq_ref	PRIMARY	PRIMARY	4	test.a1.id	1	100.00	Using index
 Warnings:
 Note	1276	Field or reference 'test.a2.id' of SELECT #3 was resolved in SELECT #2
@@ -138,9 +138,9 @@
 This should use facts, a2 and its subquery:
 explain extended select id from v1 where attr2 between 12 and 14;
 id	select_type	table	type	possible_keys	key	key_len	ref	rows	filtered	Extra
-1	SIMPLE	a2	range	PRIMARY,attr2	attr2	5	NULL	5	100.00	Using index condition; Using where
+1	SIMPLE	a2	range	PRIMARY,attr2	attr2	5	NULL	1	100.00	Using where
 1	SIMPLE	f	eq_ref	PRIMARY	PRIMARY	4	test.a2.id	1	100.00	Using index
-3	DEPENDENT SUBQUERY	t2	ref	PRIMARY	PRIMARY	4	test.a2.id	2	100.00	Using index
+3	DEPENDENT SUBQUERY	t2	ref	PRIMARY	PRIMARY	4	test.a2.id	1	100.00	Using index
 Warnings:
 Note	1276	Field or reference 'test.a2.id' of SELECT #3 was resolved in SELECT #2
 Note	1003	select `f`.`id` AS `id` from `test`.`t0` `f` join `test`.`t2` `a2` where ((`f`.`id` = `a2`.`id`) and (`a2`.`attr2` between 12 and 14) and (`a2`.`fromdate` = (select max(`test`.`t2`.`fromdate`) from `test`.`t2` where (`test`.`t2`.`id` = `a2`.`id`))))
@@ -158,7 +158,7 @@
 This should use facts and a1 tables:
 explain extended select id from v2 where attr1 between 12 and 14;
 id	select_type	table	type	possible_keys	key	key_len	ref	rows	filtered	Extra
-1	SIMPLE	a1	range	PRIMARY,attr1	attr1	5	NULL	2	100.00	Using index condition
+1	SIMPLE	a1	range	PRIMARY,attr1	attr1	5	NULL	1	100.00	Using where
 1	SIMPLE	f	eq_ref	PRIMARY	PRIMARY	4	test.a1.id	1	100.00	Using index
 Warnings:
 Note	1276	Field or reference 'test.f.id' of SELECT #3 was resolved in SELECT #2
@@ -166,9 +166,9 @@
 This should use facts, a2 and its subquery:
 explain extended select id from v2 where attr2 between 12 and 14;
 id	select_type	table	type	possible_keys	key	key_len	ref	rows	filtered	Extra
-1	SIMPLE	a2	range	PRIMARY,attr2	attr2	5	NULL	5	100.00	Using index condition
+1	SIMPLE	a2	range	PRIMARY,attr2	attr2	5	NULL	1	100.00	Using where
 1	SIMPLE	f	eq_ref	PRIMARY	PRIMARY	4	test.a2.id	1	100.00	Using where; Using index
-3	DEPENDENT SUBQUERY	t2	ref	PRIMARY	PRIMARY	4	test.f.id	2	100.00	Using index
+3	DEPENDENT SUBQUERY	t2	ref	PRIMARY	PRIMARY	4	test.f.id	1	100.00	Using index
 Warnings:
 Note	1276	Field or reference 'test.f.id' of SELECT #3 was resolved in SELECT #2
 Note	1003	select `f`.`id` AS `id` from `test`.`t0` `f` join `test`.`t2` `a2` where ((`f`.`id` = `a2`.`id`) and (`a2`.`attr2` between 12 and 14) and (`a2`.`fromdate` = (select max(`test`.`t2`.`fromdate`) from `test`.`t2` where (`test`.`t2`.`id` = `f`.`id`))))
@@ -279,7 +279,7 @@
 explain select t1.* from t1 left join t2 on t2.a=t1.a;
 id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
 1	SIMPLE	t1	index	NULL	PRIMARY	10	NULL	2	Using index
-1	SIMPLE	t2	ref	a	a	3	test.t1.a	2	Using where
+1	SIMPLE	t2	ref	a	a	3	test.t1.a	1	Using where
 drop table t1, t2;
 #
 # check UPDATE/DELETE that look like they could be eliminated
@@ -543,8 +543,6 @@
 #
 CREATE TABLE t1 (f1 int(11), PRIMARY KEY (f1)) ;
 CREATE TABLE t2 (f4 varchar(1024), KEY (f4)) ;
-Warnings:
-Warning	1071	Specified key was too long; max key length is 1000 bytes
 INSERT IGNORE INTO t2 VALUES ('xcddwntkbxyorzdv'),
 ('cnxxcddwntkbxyor'),('r'),('r'), ('did'),('I'),('when'),
 ('hczkfqjeggivdvac'),('e'),('okay'),('up');
@@ -563,9 +561,9 @@
 WHERE t3.f2 ;
 id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
 1	SIMPLE	t3	ALL	NULL	NULL	NULL	NULL	2	Using where
-1	SIMPLE	t5	ref	f5	f5	5	test.t3.f1	2	Using where; Using index
+1	SIMPLE	t5	ref	f5	f5	5	test.t3.f1	1	Using where; Using index
 1	SIMPLE	t4	ALL	NULL	NULL	NULL	NULL	3	Using where
-1	SIMPLE	t2	ALL	f4	NULL	NULL	NULL	11	Using where; Using join buffer (flat, BNL join)
+1	SIMPLE	t2	ref	f4	f4	1027	test.t3.f4	1	Using index
 # ^^ The above must not produce a QEP of t3,t5,t2,t4
 #    as that violates the "no interleaving of outer join nests" rule.
 DROP TABLE t1,t2,t3,t4,t5;
@@ -583,7 +581,7 @@
 NULL	NULL
 EXPLAIN SELECT alias1.* FROM t3 LEFT JOIN v1 as alias1 ON ( t3.a = alias1.b );
 id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
-1	SIMPLE	t3	system	NULL	NULL	NULL	NULL	1	
+1	SIMPLE	t3	ALL	NULL	NULL	NULL	NULL	1	
 1	SIMPLE	t1	ALL	NULL	NULL	NULL	NULL	1	Using where
 1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	4	test.t1.a	1	Using where; Using index
 drop view v1;
@@ -603,8 +601,8 @@
 );
 id	select_type	table	type	possible_keys	key	key_len	ref	rows	filtered	Extra
 1	PRIMARY	t2	index	NULL	b	5	NULL	2	100.00	Using where; Using index
-2	DEPENDENT SUBQUERY	t1	system	NULL	NULL	NULL	NULL	1	100.00	
+2	DEPENDENT SUBQUERY	t1	ALL	NULL	NULL	NULL	NULL	1	100.00	
 Warnings:
-Note	1003	select `test`.`t2`.`b` AS `b` from `test`.`t2` where <expr_cache><`test`.`t2`.`b`>(<in_optimizer>(`test`.`t2`.`b`,<exists>(select sum(1) from dual where 1 having (<cache>(`test`.`t2`.`b`) = <ref_null_helper>(sum(1))))))
+Note	1003	select `test`.`t2`.`b` AS `b` from `test`.`t2` where <expr_cache><`test`.`t2`.`b`>(<in_optimizer>(`test`.`t2`.`b`,<exists>(select sum(`test`.`t1`.`a`) from `test`.`t1` where 1 having (<cache>(`test`.`t2`.`b`) = <ref_null_helper>(sum(`test`.`t1`.`a`))))))
 DROP TABLE t1,t2;
 SET optimizer_switch=@save_optimizer_switch;

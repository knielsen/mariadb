# ft-index can be compiled only with gcc-4.7+, cmake-2.8.8+
# and supports only x86-64 platform
IF(NOT CMAKE_SYSTEM_PROCESSOR STREQUAL "x86_64" OR
    CMAKE_VERSION VERSION_LESS "2.8.8" OR
    NOT CMAKE_COMPILER_IS_GNUCXX OR
    CMAKE_CXX_COMPILER_VERSION VERSION_LESS "4.7")
  IF (NOT WITHOUT_TOKUDB)
    MESSAGE("TokuDB is disabled: not supported
    (${CMAKE_SYSTEM_PROCESSOR}-${CMAKE_VERSION}-<${CMAKE_COMPILER_IS_GNUCXX}>-${CMAKE_CXX_COMPILER_VERSION}")
  ENDIF()
  RETURN()
ENDIF()
SET(ENV{TOKUDB_VERSION} "7.0.2")
SET(USE_BDB OFF CACHE BOOL "")
############################################

IF(DEFINED ENV{TOKUDB_VERSION})
    SET(TOKUDB_VERSION $ENV{TOKUDB_VERSION})
    ADD_DEFINITIONS("-DTOKUDB_VERSION=\"${TOKUDB_VERSION}\"")
ENDIF()

IF(DEFINED ENV{TOKUDB_PATCHES})
    SET(TOKUDB_PATCHES $ENV{TOKUDB_PATCHES})
    ADD_DEFINITIONS("-DTOKUDB_PATCHES=${TOKUDB_PATCHES}")
ENDIF()

ADD_SUBDIRECTORY(ft-index)

# TODO: clean up includes in ft-index
INCLUDE_DIRECTORIES(ft-index)
INCLUDE_DIRECTORIES(ft-index/include)
INCLUDE_DIRECTORIES(ft-index/portability)
INCLUDE_DIRECTORIES(ft-index/toku_include)
INCLUDE_DIRECTORIES(ft-index/util)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR}/ft-index)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR}/ft-index/buildheader)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR}/ft-index/toku_include)

SET(TOKUDB_PLUGIN_DYNAMIC "ha_tokudb")
SET(TOKUDB_SOURCES ha_tokudb.cc)
MYSQL_ADD_PLUGIN(tokudb ${TOKUDB_SOURCES} STORAGE_ENGINE MODULE_ONLY
    LINK_LIBRARIES tokufractaltree_static tokuportability_static z stdc++)
SET(CMAKE_MODULE_LINKER_FLAGS_RELEASE "${CMAKE_MODULE_LINKER_FLAGS_RELEASE} -flto -fuse-linker-plugin")

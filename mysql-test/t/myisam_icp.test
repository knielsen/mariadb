#
# ICP/MyISAM tests (Index Condition Pushdown)
#

set @myisam_icp_tmp=@@optimizer_switch;
set optimizer_switch='mrr=on,mrr_sort_keys=on,index_condition_pushdown=on';

--source include/icp_tests.inc

--disable_warnings
drop table if exists t0, t1, t1i, t1m;
--enable_warnings

#
# BUG#711565 Index Condition Pushdown can make a thread hold MyISAM locks as well as be unKILLable for long time
#   This is not a ready mysqltest testcase but rather a set of queries that
#   allow to check the bug[fix] manually. Making this testcase automatic is
#   difficult because
#    - big tables are involved
#    - it's difficult to have automatic checks of whether the query could be
#       KILLed that would reliably work on fast/slow buildslaves, etc.

--disable_parsing
 
  create table t0 (a int);
  insert into t0 values (0),(1),(2),(3),(4),(5),(6),(7),(8),(9);

  create table t1 (
    kp1 int, kp2 int, 
    filler char(100),
    col int,
    key(kp1, kp2)
  );

  set myisam_sort_buffer_size=32*1000*1000;
  insert into t1 
  select 
    1000 + A.a + 10*B.a + 100*C.a + 1000*D.a + 10000 * F.a,
    1,
    'filler-data filler-data filler-data filler-data filler-data',
    1
  from 
    t0 A, t0 B, t0 C, t0 D, t0 E, t0 F, t0 G
  ;

  insert into t1 values (990, 100, 'a record to test index_next checks',100); 

  update t1 set kp2=10 where kp1 between 20000+100 and 28000;

  update t1 set kp1=20000 where kp1 between 20000 and 28000;

  insert into t1 values (20000, 100, 'last-20K-record',1);

  create table t1i like t1;
  alter table t1i engine=innodb;
  insert into t1i select * from t1;

  create table t1m like t1; 
  alter table t1m engine=maria;
  insert into t1m select * from t1;

#
# XtraDB has one check for all kinds of ranges.
#
  explain 
  select * from t1i
  where 
    kp1 < 8000 and 
    concat(repeat('foo-bar-', 100000), kp2) like '%bar-1%' and
    concat(repeat('foo-bar-', 100000), kp2) like '%bar-1%' and
    concat(repeat('foo-bar-', 100000), kp2) like '%bar-1%' and
    concat(repeat('foo-bar-', 100000), kp2) like '%bar-1%' and
    kp2 +1 > 10;


#
# MyISAM, check range access + mi_rnext():
#   (will return HA_ERR_END_OF_FILE)
  explain 
  select * from t1 
  where 
    kp1 < 10000 and 
    concat(repeat('foo-bar-', 100000), kp2) like '%bar-1%' and
    concat(repeat('foo-bar-', 100000), kp2) like '%bar-1%' and
    concat(repeat('foo-bar-', 100000), kp2) like '%bar-1%' and
    concat(repeat('foo-bar-', 100000), kp2) like '%bar-1%' and
    kp2 +1 > 10;


#
# MyISAM, check range access + mi_rkey():
#   (will return HA_ERR_END_OF_FILE)
  explain 
  select * from t1 
  where 
    kp1 >= 999 and kp1 < 10000 and 
    concat(repeat('foo-bar-', 100000), kp2) like '%bar-1%' and
    concat(repeat('foo-bar-', 100000), kp2) like '%bar-1%' and
    concat(repeat('foo-bar-', 100000), kp2) like '%bar-1%' and
    concat(repeat('foo-bar-', 100000), kp2) like '%bar-1%' and
    kp2 +1 > 10;



#
# MyISAM, check mi_rnext_same:
#

  explain 
  select * from t1 
  where 
    kp1 = 20000 and 
    concat(repeat('foo-bar-', 100000), kp2) like '%bar-1%' and
    concat(repeat('foo-bar-', 100000), kp2) like '%bar-1%' and
    concat(repeat('foo-bar-', 100000), kp2) like '%bar-1%' and
    concat(repeat('foo-bar-', 100000), kp2) like '%bar-1%' and
    kp2 +1 < 10;


# 
# MyISAM, check mi_rprev:
#

  explain 
  select * from t1 
  where 
    kp1 = 20000 and 
    concat(repeat('foo-bar-', 100000), kp2) like '%bar-1%' and
    concat(repeat('foo-bar-', 100000), kp2) like '%bar-1%' and
    concat(repeat('foo-bar-', 100000), kp2) like '%bar-1%' and
    concat(repeat('foo-bar-', 100000), kp2) like '%bar-1%' and
    kp2 +1 > 20
  order by kp1, kp2 desc;



#
# Maria, check range access + maria_rkey():
#
  explain 
  select * from t1m 
  where 
    kp1 >= 999 and kp1 < 10000 and 
    concat(repeat('foo-bar-', 100000), kp2) like '%bar-1%' and
    concat(repeat('foo-bar-', 100000), kp2) like '%bar-1%' and
    concat(repeat('foo-bar-', 100000), kp2) like '%bar-1%' and
    concat(repeat('foo-bar-', 100000), kp2) like '%bar-1%' and
    kp2 +1 > 10;



#
# Maria, check range access + maria_rnext():
#
  explain 
  select * from t1m
  where 
    kp1 < 10000 and 
    concat(repeat('foo-bar-', 100000), kp2) like '%bar-1%' and
    concat(repeat('foo-bar-', 100000), kp2) like '%bar-1%' and
    concat(repeat('foo-bar-', 100000), kp2) like '%bar-1%' and
    concat(repeat('foo-bar-', 100000), kp2) like '%bar-1%' and
    kp2 +1 > 10;


#
# Maria, check maria_rnext_same:
#

  explain 
  select * from t1m
  where 
    kp1 = 20000 and 
    concat(repeat('foo-bar-', 100000), kp2) like '%bar-1%' and
    concat(repeat('foo-bar-', 100000), kp2) like '%bar-1%' and
    concat(repeat('foo-bar-', 100000), kp2) like '%bar-1%' and
    concat(repeat('foo-bar-', 100000), kp2) like '%bar-1%' and
    kp2 +1 > 100;

# 
# Maria, check maria_rprev:
#

  explain 
  select * from t1m
  where 
    kp1 = 20000 and 
    concat(repeat('foo-bar-', 100000), kp2) like '%bar-1%' and
    concat(repeat('foo-bar-', 100000), kp2) like '%bar-1%' and
    concat(repeat('foo-bar-', 100000), kp2) like '%bar-1%' and
    concat(repeat('foo-bar-', 100000), kp2) like '%bar-1%' and
    kp2 +1 > 20
  order by kp1, kp2 desc;

drop table t0, t1, t1i, t1m;

--enable_parsing

--echo #
--echo # BUG#826935 Assertion `!table || (!table->read_set || bitmap_is_set(table->read_set, field_index))' failed
--echo #
CREATE TABLE t1 ( a int, b varchar(1024), c int, KEY (c), KEY (c,a)) ;
INSERT INTO t1 VALUES
  (NULL,'x','-678428672'),
  (NULL,'ok',NULL),
  (796262400,'byluovkgwoukfxedyeffsedajyqkyhpaqqpozn', NULL),
  (7,'STQUF',146014208),
  (955711488,'WWVOR','-1515388928');
SELECT b FROM t1 WHERE a != 1 AND c IS NULL ORDER BY 1;
DROP TABLE t1;

--echo #
--echo # Bug#870046: ICP for a GROUP BY query
--echo #

CREATE TABLE t1 (a int, b varchar(1), c varchar(1), INDEX idx(b));
INSERT INTO t1 VALUES (2,'x','x'), (5,'x','y');

SET SESSION optimizer_switch='index_condition_pushdown=off';
EXPLAIN
SELECT a, MIN(c) FROM t1 WHERE b = 'x' AND c > 'x' GROUP BY a;
SELECT a, MIN(c) FROM t1 WHERE b = 'x' AND c > 'x' GROUP BY a;
SET SESSION optimizer_switch='index_condition_pushdown=on';
EXPLAIN
SELECT a, MIN(c) FROM t1 WHERE b = 'x' AND c > 'x' GROUP BY a;
SELECT a, MIN(c) FROM t1 WHERE b = 'x' AND c > 'x' GROUP BY a;

DROP TABLE t1;

--echo #
--echo # BUG#887026: Wrong result with ICP, outer join, subquery in maria-5.3-icp
--echo #

CREATE TABLE t1 (c varchar(1));
INSERT INTO t1 VALUES ('c'), ('c');

CREATE TABLE t2 (c varchar(1), b int);
INSERT INTO t2 VALUES ('d', NULL),('d', NULL);

CREATE TABLE t3 (c varchar(1));
INSERT INTO t3 VALUES ('c');
INSERT INTO t3 VALUES ('c');

CREATE TABLE t4 ( b int, c varchar(1), KEY (b));
INSERT INTO t4 VALUES (7,'c');
INSERT INTO t4 VALUES (7,'c');

SET @save_optimizer_switch=@@optimizer_switch;
SET optimizer_switch='outer_join_with_cache=off';

--echo # Must be t1,t2,t3,t4, with t4 having Full-scan-on-NULL but not Using index condition
explain 
SELECT * FROM t1 LEFT JOIN t2 ON t1.c=t2.b
WHERE 
  t2.b NOT IN (SELECT t4.b FROM t3 STRAIGHT_JOIN t4 WHERE t4.b <= 2 AND t4.c = t3.c);
 
SELECT * FROM t1 LEFT JOIN t2 ON t1.c=t2.b
WHERE 
  t2.b NOT IN (SELECT t4.b FROM t3 STRAIGHT_JOIN t4 WHERE t4.b <= 2 AND t4.c = t3.c);

SET optimizer_switch=@save_optimizer_switch;

DROP TABLE t1,t2,t3,t4;

--echo #
--echo # BUG#933412: Server crashes in _mi_put_key_in_record on KILL QUERY with ICP, STRAIGHT_JOIN 
--echo #
CREATE TABLE t1 (
  b INT,
  c VARCHAR(1) NOT NULL,
  d DATETIME,
  KEY (c, b)
) ENGINE=MyISAM;
--echo # INSERT some data
--disable_query_log
INSERT INTO t1 ( b, d, c ) VALUES
(4,'2005-01-08 00:00:00','f'),
(1,'2004-05-20 10:45:51','c'),(2,'2006-08-11 21:33:49','e'),
(5,'2003-05-19 00:20:40','a'),(3,'2005-01-03 06:18:39','a'),
(7,'2008-11-25 18:18:14','b'),(6,'2008-11-09 15:53:46','b'),
(9,'2003-03-01 03:40:36','c'),(8,'2003-09-25 23:14:09','d'),
(0,'2007-01-17 09:18:31','f'),(9,'2008-09-08 09:52:24','c'),
(2,'2008-03-10 00:00:00','a'),(0,'2003-03-14 09:31:07','c'),
(4,'2005-04-25 00:00:00','h'),(6,'2001-08-01 05:55:55','e'),
(3,'2005-04-09 01:22:48','f'),(7,'2009-11-12 13:27:22','r'),
(0,'2009-03-28 05:05:28','h'),(15,'2005-05-16 04:35:41','f'),
(7,'2006-03-26 05:19:58','c'),(9,'2002-10-06 02:17:00','g'),
(4,'2007-01-28 03:28:20','b'),(1,'2009-04-22 10:16:40','c'),
(2,'2003-01-01 19:39:00','f'),(0,'2008-05-03 19:16:29','t'),
(2,'2005-01-28 00:00:00','j'),(8,'2004-01-10 00:00:00','w'),
(8,'2000-06-13 21:56:37','a'),(5,'2001-03-21 19:24:49','o'),
(99,'2003-12-20 21:29:06','f'),(0,'1900-01-01 00:00:00','w'),
(7,'2000-12-19 00:00:00','c'),(0,'2000-03-03 06:10:19','l'),
(3,'2000-08-11 00:00:00','q'),(0,'2007-05-25 03:46:41','e'),
(241,'2005-05-17 00:00:00','j'),(4,'2005-11-02 00:44:06','r'),
(43,'2001-07-11 00:00:00','a'),(1,'2008-12-01 18:30:27','z'),
(4,'2004-10-25 00:00:00','i'),(5,'2000-04-08 12:12:01','c'),
(0,'1900-01-01 00:00:00','f'),(9,'2002-05-13 22:47:02','p'),
(1,'2008-10-09 15:39:40','d'),(3,'2004-06-24 00:00:00','d'),
(0,'2008-03-06 00:00:00','r'),(9,'2007-04-16 18:40:03','i'),
(3,'2008-03-16 19:49:37','t'),(7,'2003-07-15 08:11:21','d'),
(8,'2005-02-11 00:04:53','r'),(0,'2002-09-21 00:00:00','y'),
(3,'2004-11-03 00:37:21','z'),(6,'2007-10-18 00:00:00','e'),
(6,'2007-01-21 10:42:56','o'),(5,'2000-03-26 21:21:04','b'),
(9,'2001-03-15 08:08:21','e'),(1,'2001-10-16 12:56:59','a'),
(6,'2004-05-01 23:45:55','o'),(4,'2000-03-04 00:00:00','f'),
(9,'2002-12-03 16:48:28','e'),(8,'2003-01-09 00:36:07','m'),
(1,'2006-06-22 04:32:41','s'),(8,'2008-09-20 05:01:48','q'),
(4,'2006-06-02 22:15:31','g'),(2,'2002-05-14 07:07:42','e'),
(7,'2005-06-05 01:30:42','r'),(127,'2004-05-11 01:56:48','a'),
(210,'2003-11-05 00:41:34','z'),(5,'1900-01-01 00:00:00','h'),
(1,'2006-04-16 00:00:00','f'),(7,'2000-12-17 00:00:00','x'),
(8,'2009-05-09 20:43:07','b'),(175,'2008-11-26 16:33:09','p'),
(0,'2002-05-09 21:18:44','v'),(8,'2002-06-01 11:32:25','k'),
(1,'2008-11-09 23:56:00','a'),(0,'2008-01-08 10:18:46','c'),
(2,'2005-04-16 00:00:00','o'),(5,'2002-08-25 00:00:00','b'),
(64,'2005-12-05 21:51:52','b'),(4,'2005-08-10 00:00:00','i'),
(6,'2006-03-23 00:00:00','d'),(9,'2007-01-27 00:00:00','i'),
(8,'2008-08-16 00:00:00','a'),(7,'2003-01-16 12:13:18','k'),
(0,'2003-06-22 00:00:00','v'),(5,'2008-06-20 05:43:56','u'),
(8,'2004-09-23 18:57:17','e'),(1,'2000-12-26 00:00:00','y'),
(4,'2009-06-01 13:00:28','e'),(1,'2009-11-18 06:28:48','m'),
(0,'2004-06-12 10:01:10','e'),(2,'2005-10-16 01:48:55','e'),
(5,'2001-12-23 09:50:21','l'),(6,'1900-01-01 00:00:00','a'),
(1,'2001-10-28 00:00:00','d'),(1,'2008-07-12 23:30:19','s'),
(0,'2002-10-11 16:51:16','r'),(4,'2007-09-18 06:27:10','x'),
(1,'2007-02-21 12:28:14','e'),(6,'2001-09-16 00:00:00','f'),
(0,'2007-09-20 02:25:45','c'),(0,'2006-08-07 03:25:56','j'),
(8,'2006-12-04 20:20:32','t'),(7,'2007-09-05 10:13:10','i'),
(9,'2006-04-12 17:59:57','t'),(2,'2009-04-28 00:06:09','b'),
(8,'2000-01-07 00:00:00','b'),(7,'2000-03-25 10:04:41','k'),
(4,'2000-07-10 00:44:55','w'),(9,'2007-09-22 14:26:26','j'),
(9,'2003-09-11 22:41:17','a'),(0,'2004-06-07 13:52:32','c'),
(8,'2008-10-09 00:00:00','p'),(1,'2007-04-01 00:00:00','c'),
(9,'2000-12-05 00:00:00','i'),(3,'1900-01-01 00:00:00','a'),
(3,'2005-12-24 21:50:54','e'),(8,'2009-07-21 19:34:55','n'),
(9,'2005-11-13 17:57:56','d'),(7,'2004-10-07 06:41:39','l'),
(1,'2004-11-20 08:05:08','u'),(3,'2005-05-25 00:00:00','r'),
(1,'2006-09-02 14:16:41','u'),(8,'2006-01-07 00:00:00','a'),
(9,'2003-04-05 00:54:20','w'),(2,'2003-12-22 00:00:00','a'),
(9,'2006-04-16 17:31:40','e'),(6,'2005-02-10 14:22:46','e'),
(7,'2004-04-27 05:54:52','p'),(1,'2005-12-07 00:00:00','t'),
(5,'2004-04-03 20:56:28','d'),(4,'2000-09-07 05:17:16','h'),
(2,'2004-08-04 16:10:42','i'),(1,'2007-03-04 00:00:00','b'),
(9,'1900-01-01 00:00:00','d'),(1,'2000-05-12 23:02:50','m'),
(2,'1900-01-01 00:00:00','l'),(1,'1900-01-01 00:00:00','k'),
(4,'2000-07-14 01:25:18','d'),(5,'2009-08-21 00:00:00','w'),
(6,'2009-05-25 13:33:54','f'),(7,'2006-06-13 00:00:00','e'),
(8,'1900-01-01 00:00:00','a'),(6,'2004-02-24 00:00:00','j'),
(0,'2003-05-21 07:03:46','k'),(9,'1900-01-01 00:00:00','e'),
(2,'1900-01-01 00:00:00','y'),(2,'2000-12-22 00:00:00','e'),
(3,'2003-09-26 00:00:00','f'),(2,'2001-01-13 08:20:19','h'),
(9,'2008-09-23 20:03:28','n'),(5,'2007-03-20 02:41:38','s'),
(1,'2009-02-14 10:27:18','a'),(0,'2001-08-10 17:44:05','s'),
(3,'2008-01-20 12:49:54','v'),(1,'2001-05-05 09:09:59','r');
--enable_query_log
CREATE TABLE t2 ( a INT ) ENGINE=MyISAM;
INSERT INTO t2 VALUES
  (7),(3),(7),(3);

# 'con2' will be the connection that will run all the KILLable statements
--connect (con2,127.0.0.1,root,,test)

--let $run = 300
--let $con_id = `SELECT CONNECTION_ID()`

--echo # Now run a number of ICP queries while trying to kill them
--disable_query_log
--disable_result_log
while ($run)
{
  --send
    SELECT * FROM t1 AS alias1 STRAIGHT_JOIN t1 AS alias2
        ON alias2.c = alias1.c
        WHERE alias2.b >= 9;

  --connect (con1,127.0.0.1,root,,test)
  --eval KILL QUERY $con_id
  --disconnect con1

  --dec $run

  --connection con2
  --error 0,ER_QUERY_INTERRUPTED
  --reap
}
--enable_result_log
--enable_query_log
--disconnect con2
--connection default
DROP TABLE t1,t2;

set optimizer_switch=@myisam_icp_tmp;

